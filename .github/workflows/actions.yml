name: CI

env:
  MIX_ENV: test
  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

on:
  push:
    branches:
      - main

  pull_request:

jobs:
  build:
    name: Build & Test
    runs-on: ubuntu-latest

    strategy:
      matrix:
        elixir: ["1.11"] # "1.10"
        otp: ["23.1"]

    outputs:
      nextversion: ${{ steps.getnextversion.outputs.nextversion }}

    steps:
      - uses: actions/checkout@v2

      - name: Set up Elixir
        uses: actions/setup-elixir@v1
        with:
          elixir-version: ${{ matrix.elixir }} # Define the elixir version [required]
          otp-version: ${{ matrix.otp }}

      - name: Restore dependencies cache
        uses: actions/cache@v2
        with:
          key: ${{ runner.os }}-${{ matrix.otp }}-${{ matrix.elixir }}-mix-${{ hashFiles(format('{0}{1}', github.workspace, '/mix.lock')) }}
          path: deps

      - name: Restore build cache
        uses: actions/cache@v2
        with:
          key: ${{ runner.os }}-${{ matrix.otp }}-${{ matrix.elixir }}-mix-${{ hashFiles(format('{0}{1}', github.workspace, '/mix.lock')) }}
          path: _build

      - name: Install dependencies
        run: |
          mix deps.get

      - name: Credo review
        uses: red-shirts/reviewdog-action-credo@v1
        with:
          github_token: ${{ secrets.github_token }}
          level: error
          reporter: github-pr-review

      - name: Credo check
        uses: red-shirts/reviewdog-action-credo@v1
        with:
          github_token: ${{ secrets.github_token }}
          level: error
          reporter: github-pr-check

      - name: Check code format
        run: mix format --check-formatted

      - name: Check for unused deps
        run: mix deps.unlock --check-unused

      - name: Run tests
        run: mix coveralls.github

        # https://github.com/marketplace/actions/action-for-semantic-release
      - name: Semantic Release
        uses: cycjimmy/semantic-release-action@v2
        with:
          semantic_version: 16
          branches: |
            [
              '+([0-9])?(.{+([0-9]),x}).x',
              'main',
              'next',
              'next-major',
              {
                name: 'beta',
                prerelease: true
              },
              {
                name: 'alpha',
                prerelease: true
              }
            ]
          extra_plugins: |
            @semantic-release/exec
            @semantic-release/changelog
            @semantic-release/github
            @semantic-release/git

      - name: Output next release version
        id: getnextversion
        run: |
          if [ -f "version" ]; then
            VERSION=`cat version`
            echo "::set-output name=nextversion::$VERSION"
          else
            VERSION=''
            echo "Next release version not set. No release."
          fi
          echo "::set-output name=nextversion::$VERSION"
